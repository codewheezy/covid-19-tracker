{"version":3,"sources":["utils/index.js","components/InfoBox.js","utils/caseCircle.js","components/Map.js","components/Table.js","utils/sort.js","components/LineGraph.js","App.js","index.js"],"names":["formatNumber","stat","numeral","format","InfoBox","title","cases","total","changeCasesType","type","Card","className","onClick","CardContent","Typography","color","caseTypeColors","hex","multiplier","recovered","deaths","Map","countries","caseType","center","zoom","TileLayer","url","attribution","data","map","country","i","Circle","key","countryInfo","lat","long","fillOpacity","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","showDataOnMap","Table","variant","sortCountryData","sort","a","b","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","buildChartData","lastDataPoint","charData","date","newDataPoint","x","y","push","useEffect","fetch","then","res","json","chartData","catch","err","console","log","getData","length","datasets","backgroundColor","borderColor","App","counties","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","name","iso2","sortedCountry","error","getCountriesData","worldwideData","onCountryChange","e","countryCode","target","URL","FormControl","Select","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70751c25.chunk.js","sourcesContent":["import numeral from 'numeral'\n\nexport const formatNumber = (stat) =>\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : '+0'","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nimport './infoBox.css'\nimport { formatNumber } from '../utils/';\n\nconst InfoBox = ({ title, cases, total, changeCasesType, type }) => {\n    return (\n        <Card className='infoBox' onClick={() => changeCasesType(type)}>\n            <CardContent>\n                <Typography className='infoBox__title' color='textSecondary'>\n                    {title}\n                </Typography>\n                <h3 className={type === 'recovered' ? `infoBox__cases infoBox__cases-green` : `infoBox__cases`}>\n                    {formatNumber(cases)}{' '}<span className='infobox__span'>today</span>\n                </h3>\n                <Typography className='infoBox__total' color='textSecondary'>\n                    {formatNumber(total)}{' '} total\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\nInfoBox.propTypes = {\n    title: PropTypes.string,\n    current: PropTypes.number,\n    total: PropTypes.number,\n};\n\nexport default InfoBox;","import React from 'react';\nimport { Circle, Popup } from 'react-leaflet'\nimport numeral from 'numeral'\nconst caseTypeColors = {\n    cases: {\n        hex: '#CC1034',\n        multiplier: 800\n    },\n    recovered: {\n        hex: '#7dd71d',\n\n\n        multiplier: 1200\n    },\n    deaths: {\n        hex: '#fb4443',\n        multiplier: 2000\n    }\n}\n\n// \n// DRAW circle on the map\nexport const showDataOnMap = (data, caseType = \"cases\") =>\n    data.map((country, i) => (\n        <Circle\n            key={i}\n            center={[country.countryInfo.lat, country.countryInfo.long]}\n            fillOpacity={0.4}\n            color={caseTypeColors[caseType].hex}\n            fillColor={caseTypeColors[caseType].hex}\n            radius={\n                Math.sqrt(country[caseType]) * caseTypeColors[caseType].multiplier}\n        >\n            <Popup>\n                <div className='popup__container'>\n                    <div className=\"popup__country-flag\" style={{ backgroundImage: `url(${country.countryInfo.flag})` }} />\n                    <div className='popup__country-name'>{country.country}</div>\n                    <div className='popup__cases'>Cases:{numeral(country.cases).format(\"0,0\")} </div>\n                    <div className='popup__recovered'>Recovered:{numeral(country.recovered).format(\"0,0\")}</div>\n                    <div className='popup__deaths'>Death:{numeral(country.deaths).format(\"0,0\")}</div>\n                </div>\n            </Popup>\n        </Circle >\n    ))\n","import React from 'react';\n// import PropTypes from 'prop-types';\nimport { Map as LeafletMap, TileLayer } from 'react-leaflet'\nimport './map.css'\nimport { showDataOnMap } from '../utils/caseCircle';\n\nfunction Map({ countries, caseType, center, zoom }) {\n    return (\n        <div className=\"map\">\n            <LeafletMap center={center} zoom={zoom}>\n                <TileLayer\n                    url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors' />\n                {countries && showDataOnMap(countries, caseType)}\n            </LeafletMap>\n\n\n        </div>\n    );\n}\n\n// Map.propTypes = {\n\n// };\n\nexport default Map;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './table.css'\nimport { Typography } from '@material-ui/core';\nconst Table = ({ countries }) => {\n    return (\n        <div className='table'>\n            <Typography variant=\"h5\">\n                Live cases by countries\n          </Typography>\n            <table >\n                <tbody>\n                    {countries.map(({ country, cases }) => (\n                        <tr key={country}>\n                            <td>{country}</td>\n                            <td>{cases}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    countries: PropTypes.array\n};\n\nexport default Table;","export const sortCountryData = (data) => {\n    const sortedData = [...data]\n    return sortedData.sort((a, b) => a.cases > b.cases ? -1 : 1)\n}","import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\nimport { Line } from 'react-chartjs-2';\nimport numeral from 'numeral'\nimport './lineGraph.css'\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0.0\");\n            }\n        }\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\"\n                },\n            },\n        ],\n        yAxes: [{\n            gridLines: {\n                display: false\n            },\n            ticks: {\n                callback: function (value, index, values) {\n                    return numeral(value).format(\"0a\")\n                },\n            }\n        }],\n    }\n\n}\n\nconst LineGraph = ({ caseType }) => {\n    const [data, setData] = useState()\n\n    const buildChartData = (data, caseType) => {\n        const charData = [];\n        let lastDataPoint;\n        for (const date in data[caseType]) {\n            if (lastDataPoint) {\n                const newDataPoint = {\n                    x: date,\n                    y: data[caseType][date] - lastDataPoint\n                }\n                charData.push(newDataPoint)\n            }\n            lastDataPoint = data[caseType][date];\n        }\n        return charData\n    }\n\n    useEffect(() => {\n        const URL = 'https://disease.sh/v3/covid-19/historical/all?lastdays=150'\n        const getData = async () => {\n            await fetch(URL)\n                .then(res => res.json())\n                .then(data => {\n                    const chartData = buildChartData(data, caseType)\n                    setData(chartData)\n                })\n                .catch(err => console.log(err))\n        }\n        getData()\n    }, [caseType])\n\n    return (\n        <div className='graph'>\n            <h3 className='graph__title'>worldwide new {caseType}</h3>\n            {data?.length > 0 && (\n                <Line\n                    options={options}\n                    data={\n                        {\n                            datasets: [\n                                {\n                                    backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                                    borderColor: \"#CC1034\",\n                                    data: data\n                                }\n                            ]\n                        }\n\n                    } />)}\n        </div>\n    );\n};\n\n// LineGraph.propTypes = {\n\n// };\n\nexport default LineGraph;","import React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport InfoBox from './components/InfoBox';\nimport './App.css';\nimport Map from './components/Map';\nimport Table from './components/Table';\nimport { sortCountryData } from './utils/sort';\nimport LineGraph from './components/LineGraph';\nimport \"leaflet/dist/leaflet.css\"\n\nfunction App() {\n  const [counties, setCountries] = useState(['not loaded'])\n  const [country, setCountry] = useState('Worldwide')\n  const [countryInfo, setCountryInfo] = useState({})\n  const [tableData, setTableData] = useState(null)\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746, lng: -40.4796\n  })\n  const [mapZoom, setMapZoom] = useState(3)\n  const [mapCountries, setMapCountries] = useState()\n  const [casesType, setCasesType] = useState('cases')\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries')\n        .then(res => res.json())\n        .then(data => {\n\n          const countries = data.map(country => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }))\n          setCountries(countries)\n          setMapCountries(data)\n          const sortedCountry = sortCountryData(data)\n          setTableData(sortedCountry)\n        }\n        )\n        .then(error => console.log(error))\n    }\n\n    getCountriesData()\n  }, [])\n\n  useEffect(() => {\n\n    const worldwideData = async () => {\n      await fetch('https://disease.sh/v3/covid-19/all')\n        .then(res => res.json())\n        .then(data => {\n          setCountry('worldwide')\n          setCountryInfo(data)\n        })\n    }\n    worldwideData()\n  }, [])\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value\n\n    const URL = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    await fetch(URL)\n      .then(res => res.json())\n      .then(data => {\n        setCountry(countryCode)\n        setCountryInfo(data)\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long])\n        setMapZoom(4)\n      })\n\n  }\n\n  const changeCasesType = (caseType) => setCasesType(caseType)\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        {/* title  - dropdown */}\n        <div className=\"app__header\">\n          <h3>Covid 19 tracker</h3>\n          <FormControl className=\"app__dropdown\">\n            <Select variant='outlined' value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {counties.map(\n                (country, i) =>\n                  <MenuItem key={i} value={country.value} >{country.name}</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n        </div>\n        {/* infobox  */}\n        <div className=\"app__stats\">\n          <InfoBox title='Coronavirus cases' cases={countryInfo.todayCases} total={countryInfo.cases} type='cases' changeCasesType={changeCasesType} />\n          <InfoBox title='Recovered' cases={countryInfo.todayRecovered} total={countryInfo.recovered} type='recovered' changeCasesType={changeCasesType} />\n          <InfoBox title='Deaths' cases={countryInfo.todayDeaths} total={countryInfo.deaths} type='deaths' changeCasesType={changeCasesType} />\n        </div>\n\n        {/* map */}\n        <Map caseType={casesType} countries={mapCountries} center={mapCenter} zoom={mapZoom} />\n\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          {tableData && <Table countries={tableData} />}\n          <LineGraph caseType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\n  <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}